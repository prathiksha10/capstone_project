:root {
    --flex-gap: 10px;
    --flex-item-padding: 20px;
    --flex-item-bg-color: #f0f0f0;
}

.App {
  text-align: center;
}

.flex-container {
  display: flex;
  flex-direction: row; /* This is the default, you can also use 'column' */
  justify-content: space-around; /* This property aligns items along the main axis */
  align-items: center; /* This property aligns items along the cross axis */
  height: 100vh; /* This is just for example to fill the viewport height */
}

.flex-item {
  background-color: var(--flex-item-bg-color);
  padding: 20px;
  margin: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  text-align: center;
}

/* Styles for small screens */
@media (max-width: 400px) {
  .flex-container {
      flex-direction: column; /* Stack items vertically */
      align-items: stretch; /* Stretch items to fill the container width */
  }
  .flex-item {
      flex: 1 1 100%;
      flex-direction: column; /* Make items take full width */
  }
}

/* Styles for medium screens */
@media (min-width: 601px) and (max-width: 1024px) {
  .flex-item {
      flex: 1 1 calc(50% - 20px); /* Two items per row with a gap */
  }
}

/* Styles for large screens */
@media (min-width: 1025px) {
  .flex-item {
      flex: 1 1 calc(33.33% - 20px); /* Three items per row with a gap */
  }
}






